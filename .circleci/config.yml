version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    #parallelism: 2 # run three instances of this job in parallel
    #docker: # run the steps with Docker
      #- image: circleci/ruby:2.4.2-jessie-node # ...with this image as the primary container; this is where all `steps` will run
        #environment: # environment variables for primary container
          #BUNDLE_JOBS: 2
          #BUNDLE_RETRY: 2
          #BUNDLE_PATH: vendor/bundle
          #PGHOST: 127.0.0.1
          #PGUSER: canvas
          #RAILS_ENV: test
      #- image: circleci/postgres:9.5-alpine # database imagegit 
        #environment: # environment variables for database
          #POSTGRES_USER: canvas
          #POSTGRES_DB: canvas_test
          #POSTGRES_PASSWORD: ""
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      #- restore_cache:
          #keys:
            #- rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            #- rails-demo-bundle-v2-

      - run: # Install Ruby dependencies
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment

      # Store bundle cache for Ruby dependencies
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      #- run:
          #name: Database setup
          #command: bin/rails db:schema:load --trace 